import * as React from 'react'
import { ANIMATION_SPEED } from './consts'

export type Project = {
  name: string
  info: string
  motivation: string
  url: string
  img: string
}

const projects: Project[] = [
  {
    name: 'Rounal',
    info: 'Rounal is a TUI application for journal entries generated by systemctl. It utilizes async programming techniques with the Tokio crate.',
    motivation:
      "Rust is an interesting programming language with concepts like borrow checker and lifetimes, that can't be found in many other languages. This project's purpose was to teach me how to work with Rust in a practical, real-world tool.",
    url: 'https://github.com/williamlempinen/rounal',
    img: 'rounal.png',
  },
  {
    name: 'Flappy bird game',
    info: 'Flappy bird game written in Haskell. Project uses the gloss library for rendering UI elements.',
    motivation:
      'This project was made for the University of Turku’s “Programming Paradigms in Practice 2024.” The goal was to explore a purely functional language (Haskell) in game development.',
    url: 'https://github.com/williamlempinen/haskell-flappy-bird',
    img: 'flappy_bird.png',
  },
  {
    name: 'ZatChat',
    info: 'A chat application that utilizes websockets for real-time communication. Built with TypeScript, React, Vite, Tailwind on the frontend, and Node.js, Express, PostgreSQL, and PrismaORM on the backend.',
    motivation:
      'I wanted to write a larger Node.js‐based project. The client side is straightforward, but the main focus is on the backend and real-time interactions.',
    url: 'https://github.com/williamlempinen/ZatChat',
    img: 'zatchat.png',
  },
  {
    name: 'Tweets',
    info: 'A mini Twitter clone. Built with TypeScript, React, Vite, and Material UI on the frontend, and Java + Spring Boot on the backend.',
    motivation:
      'This project helped me delve deeper into Java and the Spring framework, focusing on RESTful services and authentication.',
    url: 'https://github.com/williamlempinen/tweets-web',
    img: 'tweets.png',
  },
]

const Projects = () => {
  const handleClick = (url: string) => {
    window.open(url, '_blank', 'noopener, noreferrer')
  }

  return (
    <div className="flex h-full w-full flex-col gap-6">
      {projects.map((project) => (
        <React.Fragment key={project.name}>
          <div className="flex flex-col">
            <h3 className="text-forest-m self-center text-2xl font-bold underline">
              {project.name}
            </h3>
            <div className="grid grid-cols-1 gap-2 p-2 sm:grid-cols-2">
              <div className="flex flex-col justify-start">
                <img
                  src={`images/${project.img}`}
                  alt={project.name}
                  className="h-auto w-auto rounded-lg object-contain"
                />
              </div>
              <div className="flex flex-col justify-between">
                <div className="flex flex-col gap-4">
                  <p>
                    <span className="text-forest-l font-bold">About: </span>
                    {project.info}
                  </p>
                  <p>
                    <span className="text-forest-l font-bold">Motivation: </span>
                    {project.motivation}
                  </p>
                </div>
                <button
                  className={`bg-forest-m hover:bg-forest-l mt-2 h-8 rounded-lg text-2xl text-white transition-all duration-[${ANIMATION_SPEED}] ease-in-out hover:scale-[1.02] hover:cursor-pointer`}
                  onClick={() => handleClick(project.url)}
                  title={project.url}
                >
                  Go to source
                </button>
              </div>
            </div>
          </div>
          <hr className="w-full" />
        </React.Fragment>
      ))}
    </div>
  )
}

export default Projects
